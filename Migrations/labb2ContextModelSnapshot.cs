// <auto-generated />
using System;
using Lab3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab3.Migrations
{
    [DbContext(typeof(labb2Context))]
    partial class labb2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab3.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClassId")
                        .HasName("PK__Classes__CB1927A0336FC187");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Lab3.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int?>("FkTeacherId")
                        .HasColumnType("int")
                        .HasColumnName("fkTeacherID");

                    b.Property<string>("Subjects")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__C92D7187374E0B72");

                    b.HasIndex("FkTeacherId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Lab3.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF16805395C");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Lab3.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GradeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int?>("FkCourseId")
                        .HasColumnType("int")
                        .HasColumnName("fkCourseID");

                    b.Property<int?>("FkStudentId")
                        .HasColumnType("int")
                        .HasColumnName("fkStudentID");

                    b.Property<int?>("FkTeacherId")
                        .HasColumnType("int")
                        .HasColumnName("fkTeacherID");

                    b.Property<string>("Grade1")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("Grade");

                    b.Property<DateOnly>("GradeDate")
                        .HasColumnType("date");

                    b.Property<int>("GradeNr")
                        .HasColumnType("int");

                    b.HasKey("GradeId")
                        .HasName("PK__Grades__54F87A37E192F7BE");

                    b.HasIndex("FkCourseId");

                    b.HasIndex("FkStudentId");

                    b.HasIndex("FkTeacherId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Lab3.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("FkClassId")
                        .HasColumnType("int")
                        .HasColumnName("fkClassID");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Personnummer")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__32C52A79966D87FB");

                    b.HasIndex("FkClassId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Lab3.Models.Course", b =>
                {
                    b.HasOne("Lab3.Models.Employee", "FkTeacher")
                        .WithMany("Courses")
                        .HasForeignKey("FkTeacherId")
                        .HasConstraintName("FK__Courses__fkTeach__3E52440B");

                    b.Navigation("FkTeacher");
                });

            modelBuilder.Entity("Lab3.Models.Grade", b =>
                {
                    b.HasOne("Lab3.Models.Course", "FkCourse")
                        .WithMany("Grades")
                        .HasForeignKey("FkCourseId")
                        .HasConstraintName("FK__Grades__fkCourse__403A8C7D");

                    b.HasOne("Lab3.Models.Student", "FkStudent")
                        .WithMany("Grades")
                        .HasForeignKey("FkStudentId")
                        .HasConstraintName("FK__Grades__fkStuden__6477ECF3");

                    b.HasOne("Lab3.Models.Employee", "FkTeacher")
                        .WithMany("Grades")
                        .HasForeignKey("FkTeacherId")
                        .HasConstraintName("FK__Grades__fkTeache__3F466844");

                    b.Navigation("FkCourse");

                    b.Navigation("FkStudent");

                    b.Navigation("FkTeacher");
                });

            modelBuilder.Entity("Lab3.Models.Student", b =>
                {
                    b.HasOne("Lab3.Models.Class", "FkClass")
                        .WithMany("Students")
                        .HasForeignKey("FkClassId")
                        .HasConstraintName("FK__Students__fkClas__6754599E");

                    b.Navigation("FkClass");
                });

            modelBuilder.Entity("Lab3.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Lab3.Models.Course", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("Lab3.Models.Employee", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("Lab3.Models.Student", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
